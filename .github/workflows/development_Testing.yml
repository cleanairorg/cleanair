name: development_Testing.yml
on:
  push:
    branches:
      - development

jobs:
  DevelopmentTesting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install required tools
        run: |
          dotnet tool install -g dotnet-sonarscanner
          dotnet tool install -g dotnet-reportgenerator-globaltool
          dotnet tool install -g dotnet-stryker

      - name: Sonarqube Code Analysis Start
        run: |
          dotnet sonarscanner begin \
          /k:"${{ vars.SONAR_PROJECT }}" \
          /d:sonar.host.url="${{ vars.SONARQUBE_URL }}" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.coverageReportPaths="coverage-report/SonarQube.xml" \
          /d:sonar.qualitygate.wait=true \
          /d:sonar.qualitygate.timeout=300

      - name: Build Project
        run: dotnet build

      - name: Run Unit Tests and Collect code coverage
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory ./server/TestResults

      - name: Generate report
        run: |
          reportgenerator \
          -reports:./server/TestResults/**/coverage.cobertura.xml \
          -targetdir:coverage-report \
          -reporttypes:SonarQube

      - name: Complete Static Code Analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        
        
  MutationTesting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - server/Application.Tests
          - server/Infrastructure.Websocket.Tests
          - server/Infrastructure.Postgres.Tests
          - server/Api.Rest.ControllerTests
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Install Stryker
        run: dotnet tool install -g dotnet-stryker
  
      - name: Run Mutation Tests
        continue-on-error: true
        working-directory: ${{ matrix.project }}
        run: |
          dotnet stryker \
            --break-at 80 \
            --reporter html \
            --reporter progress \
            --output StrykerOutput
  
      - name: Normalize project name
        id: sanitize
        run: |
          SANITIZED_NAME=$(echo "${{ matrix.project }}" | sed 's/\//-/g')
          echo "name=$SANITIZED_NAME" >> $GITHUB_OUTPUT
  
      - name: Upload Mutation Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stryker-report-${{ steps.sanitize.outputs.name }}
          path: ${{ matrix.project }}/StrykerOutput/**/reports/mutation-report.html
  