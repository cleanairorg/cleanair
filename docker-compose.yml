# docker-compose.yml
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  web:
    image: ghcr.io/${GITHUB_REPOSITORY}-backend:staging
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      ConnectionStrings__DefaultConnection: Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      AppOptions__DbConnectionString: Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      AppOptions__JwtSecret: ${JWT_SECRET}
  
  flyway:
    image: flyway/flyway:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_CONNECT_RETRIES: 5
      FLYWAY_LOCATIONS: filesystem:/flyway/sql
    volumes:
      - ./server/migrations:/flyway/sql
    command: migrate
  
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY}-frontend:staging
    ports:
      - "80:80"
    depends_on:
      - web

volumes:
  postgres_data: