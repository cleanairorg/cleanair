services:
  postgres:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      
  featurehub:
    image: featurehub/party-server:latest
    container_name: featurehub
    restart: always
    environment:
      JAVA_OPTS: "-Xmx200m -Xms100m"  # Begr√¶nser Java heap memory
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 250M
    volumes:
      - featurehub-h2-data:/db
    ports:
      - "8085:8085"    
      
      
  backend:
    depends_on:
      postgres:
        condition: service_healthy
    image: ghcr.io/${GITHUB_REPOSITORY}-backend:staging
    container_name: backend
    ports:
      - "8181:8181"
    expose:
      - "8080"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT}
      AppOptions__DbConnectionString: Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      AppOptions__JwtSecret: ${JWT_SECRET}
      AppOptions__MQTT_BROKER_HOST: ${MQTT_BROKER_HOST}
      AppOptions__MQTT_USERNAME: ${MQTT_USERNAME}
      AppOptions__MQTT_PASSWORD: ${MQTT_PASSWORD}
      AppOptions__SeqUrl: ${SEQ_URL}
      AppOptions__FeatureHubApiKey: ${FEATUREHUB_API_KEY}
      AppOptions__FeatureHubUrl: ${FEATUREHUB_URL}
  
  flyway:
    depends_on:
      postgres:
        condition: service_healthy
    image: flyway/flyway:latest
    container_name: flyway
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_CONNECT_RETRIES: 5
      FLYWAY_LOCATIONS: filesystem:/flyway/sql
    volumes:
      - ./server/Infrastructure.Postgres/Migrations:/flyway/sql
    command: migrate
  
  frontend:
    depends_on:
      - backend
    image: ghcr.io/${GITHUB_REPOSITORY}-frontend:staging
    container_name: frontend
    ports:
      - "80:80"
        
        
  seq:
    image: datalust/seq
    container_name: logger
    ports:
      - "5341:5341"    # HTTP ingestion API
      - "5342:80"  # Web UI 
    environment:
      - ACCEPT_EULA=Y
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 150M

volumes:
  postgres_data:
  featurehub-h2-data:
